######################################################################
# Customized homing
######################################################################

# Safe Z homing. One may use this mechanism to home the Z axis at a
# specific XY coordinate. This is useful if the toolhead, for example
# has to move to the center of the bed before Z can be homed.
#[safe_z_home]
#home_xy_position: 0,0
#   A X,Y coordinate (e.g. 100,100) where the Z homing should be
#   performed. This parameter must be provided.
#speed: 50.0
#   Speed at which the toolhead is moved to the safe Z home
#   coordinate. The default is 50 mm/s
#z_hop: 5
#   Lift the Z axis prior to homing. This is applied to any homing
#   command, even if it doesn't home the Z axis. If the Z axis is
#   already homed and the current Z position is less than z_hop, then
#   this will lift the head to a height of z_hop. If the Z axis is not
#   already homed, then prior to any XY homing movement the Z axis
#   boundary checks are disabled and the head is lifted by z_hop. If
#   z_hop is specified, be sure to home the Z immediately after any XY
#   home requests so that the Z boundary checks are accurate. The
#   default is to not implement Z hop.
#z_hop_speed: 20.0
#   Speed at which the Z axis is lifted prior to homing. The default
#   is 20mm/s.
#move_to_previous: False
#   When set to True, xy are reset to their previous positions after z
#   homing. The default is False.

[gcode_macro DUMP_WARNINGS]
description: Debug: Print all warning messages from klipper
gcode:
  {% set parameters = ["printer.configfile.warnings:"] %}
  {% for name1 in printer.configfile.warnings %}
      {% set parameters = parameters.append("%s -> %s -> %s\n%s" % (name1.type, name1.section, name1.option, name1.message)) %}
  {% endfor %}
  {action_respond_info(parameters|join("\n"))}

[gcode_macro M600]
gcode:
    PAUSE
    UNLOAD_FILAMENT

[gcode_macro UNLOAD_FILAMENT]
gcode:
    M83
    G91
    G1 E3 F300
    G1 E-60 F300
    G90
    M82

[gcode_macro LOAD_FILAMENT]
variable_status: 1
gcode:
    M83
    G91
    G1 E50 F300
    G90
    M82 

[gcode_macro _Licht_AUS]
gcode:
    SET_PIN PIN=Licht VALUE=0

[gcode_macro _Tuning_Tower255]
gcode:
    TUNING_TOWER COMMAND="SET_HEATER_TEMPERATURE HEATER=extruder" PARAMETER=TARGET START=255 FACTOR=-1
     
[gcode_macro _Licht_AN]
gcode:
    SET_PIN PIN=Licht VALUE=1
    
 
[gcode_macro START_PRINT]
gcode:
    G90 ; use absolute coordinates
    M83 ; extruder relative mode
    G28 X Y 
    G28 Z
    G1 X0 Y0 Z0
    SET_PIN PIN=Licht VALUE=1
    G1 Z0.2
    G1 Y10.0 F1000.0 ; go outside print area
    G92 E0.0
    G1 X60.0 E9.0 F1000.0 ; intro line
    G1 X100.0 E12.5 F1000.0 ; intro line
    G92 E0.0
    M221 S95

[gcode_macro END_PRINT]
gcode:
    M117 End printing.
    G91 ; relative positioning
    G1 E-1 F300 ;retract the filament a bit before lifting the nozzle to release some of the pressure
    G1 Z+5 E-2 F1000 ;move Z up a bit and extract a bit more
    G90 ; absolute positioning
    G1 X0 F2000 ; move X to min endstops so the head is out of the way
    G1 Y200 F2000 ; Move Y to the back
    m104 S0 ; turn hotend heating off
    M140 S0 ; turn bed heating off
    M107 ; turn fan off
    M84 ; steppers off

#[gcode_macro PAUSE]
#rename_existing: BASE_PAUSE
#default_parameter_X: 10    #edit to your park position
#default_parameter_Y: 200    #edit to your park position
#default_parameter_Z: 100     #edit to your park position
#default_parameter_E: 1      #edit to your retract length
#gcode:
#    SAVE_GCODE_STATE NAME=PAUSE_state
#    BASE_PAUSE
#    G91
#    G1 E-{E} F2100
#    G1 Z+10 E-5 X10 F500 
#    G90
#    G1 X{X} Y{Y} F6000

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      G1 Z{z_safe} F900
      G90
      G1 X{x_park} Y{y_park} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G91
      G1 E{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    #TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT
    